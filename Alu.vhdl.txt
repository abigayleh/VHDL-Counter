library ieee;
use ieee.std_logic_1164.all;
entity ALU is
port ( 
-- A represents higher switch, D represents lower switch
A, B, C, D: in std_logic;
HEX: out std_logic_vector(6 downto 0));
end ALU;
architecture structure of ALU is
begin
HEX(0) <= (NOT A AND NOT B AND NOT C AND D)
OR (NOT A AND B AND NOT C AND NOT D)
OR (A AND B AND NOT C AND D) 
OR (A AND NOT B AND C AND D);

HEX(1) <= (NOT A AND B AND NOT C AND D)
OR (A AND B AND NOT D)
OR (B AND C AND NOT D)
OR (A AND C AND D);

HEX(2) <= (A AND B AND C)
OR (NOT A AND NOT B AND C AND NOT D)
OR (A AND B AND NOT D);

HEX(3) <= (NOT A AND B AND NOT C AND NOT D)
OR (NOT B AND NOT C AND D)
OR (B AND C AND D)
OR (A AND NOT B AND C AND NOT D);

HEX(4) <= ((NOT A AND D)
OR (NOT A AND B AND NOT C)
OR (NOT C AND D AND NOT B));

HEX(5) <= (A AND B AND NOT C AND D)
OR (NOT A AND NOT B AND D)
OR (NOT A AND C AND D)
OR (NOT A AND NOT B AND C);

HEX(6) <= (A AND B AND NOT C AND NOT D)
OR (NOT A AND B AND C AND D)
OR (NOT A AND NOT B AND NOT C);
end structure;